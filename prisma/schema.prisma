// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Owner {
  id        String     @id
  name      String
  document  String     @unique
  password  String
  createdAt DateTime
  updatedAt DateTime?
  Category  Category[]
  Product   Product[]
  Catalog   Catalog[]

  @@map("owners")
}

model Category {
  id          String    @id
  Owner       Owner     @relation(fields: [ownerId], references: [id])
  ownerId     String
  title       String
  description String
  createdAt   DateTime
  updatedAt   DateTime?
  Product     Product[]
  Catalog     Catalog[]

  @@map("categories")
}

model Product {
  id          String        @id
  Category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  String
  Owner       Owner         @relation(fields: [ownerId], references: [id])
  ownerId     String
  title       String
  description String
  price       Int
  createdAt   DateTime
  updatedAt   DateTime?
  CatalogItem CatalogItem[]

  @@map("products")
}

model Catalog {
  id          String        @id
  owner       Owner         @relation(fields: [ownerId], references: [id])
  ownerId     String
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime
  updatedAt   DateTime?
  CatalogItem CatalogItem[]

  @@map("catalogs")
}

model CatalogItem {
  id        String    @id
  product   Product   @relation(fields: [productId], references: [id])
  productId String
  catalog   Catalog   @relation(fields: [catalogId], references: [id])
  catalogId String
  createdAt DateTime
  updatedAt DateTime?

  @@map("catalog_items")
}

model Request {
  id        String   @id
  ownerId   String
  method    String
  route     String
  input     String   @db.Text
  output    String   @db.Text
  status    Int
  createdAt DateTime
  updatedAt DateTime

  @@map("requests")
}
